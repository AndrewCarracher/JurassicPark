{"ast":null,"code":"import _classCallCheck from \"/Users/andrewcarracher/codeclan/work_files/final_project/front_end/dino_world/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/andrewcarracher/codeclan/work_files/final_project/front_end/dino_world/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/andrewcarracher/codeclan/work_files/final_project/front_end/dino_world/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/andrewcarracher/codeclan/work_files/final_project/front_end/dino_world/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/andrewcarracher/codeclan/work_files/final_project/front_end/dino_world/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/andrewcarracher/codeclan/work_files/final_project/front_end/dino_world/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/andrewcarracher/codeclan/work_files/final_project/front_end/dino_world/src/containers/dinosaur_view/transfer_dino.js\";\nimport React, { Component } from 'react';\nimport Request from '../../helpers/request';\n\nvar TransferDino =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TransferDino, _Component);\n\n  function TransferDino(props) {\n    var _this;\n\n    _classCallCheck(this, TransferDino);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TransferDino).call(this, props));\n    _this.state = {\n      dinosaurs: [],\n      paddocks: [],\n      paddockSelected: [],\n      dinoSelected: [],\n      newPaddockSelected: [],\n      id: []\n    };\n    _this.handleDinoSelected = _this.handleDinoSelected.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handlePaddockSelected = _this.handlePaddockSelected.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TransferDino, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var request = new Request();\n      request.get(\"/dinosaurs/\").then(function (data) {\n        _this2.setState({\n          dinosaurs: data\n        });\n      });\n      request.get(\"/paddocks/all\").then(function (data) {\n        _this2.setState({\n          paddocks: data\n        });\n      });\n    }\n  }, {\n    key: \"handlePaddockSelected\",\n    value: function handlePaddockSelected(e) {\n      if (e) {\n        this.setState({\n          newPaddockSelected: e.target.value\n        });\n      }\n    }\n  }, {\n    key: \"handlePaddockSelected\",\n    value: function handlePaddockSelected(e) {\n      if (e) {\n        for (var i = 0; i < this.state.paddocks.length; i++) {\n          if (this.state.paddocks[i].name === e.target.value) {\n            this.setState({\n              paddockSelected: this.state.paddocks[i]\n            });\n            this.setState({\n              dinosaurs: this.state.paddocks[i].occupants\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: \"handleDinoSelected\",\n    value: function handleDinoSelected(e) {\n      if (e) {\n        this.setState({\n          dinoSelected: e.target.value\n        });\n      }\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      event.preventDefault();\n      this.props.handleDinosaurTransfer(this.state.dinoSelected, this.state.newPaddockSelected);\n      this.setState({\n        transferDetails: []\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var dinos = this.state.dinosaurs;\n      var paddocks = this.state.paddocks;\n      var individualDinos = dinos.map(function (dinosaur) {\n        return React.createElement(\"option\", {\n          key: dinosaur.id,\n          value: dinosaur.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, dinosaur.name);\n      });\n      var individualPaddocks = paddocks.map(function (paddock) {\n        return React.createElement(\"option\", {\n          key: paddock.name,\n          value: paddock.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, paddock.name);\n      });\n      var individualNewPaddocks = paddocks.map(function (paddock) {\n        return React.createElement(\"option\", {\n          key: paddock.name,\n          value: paddock.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, paddock.name);\n      });\n      return React.createElement(React.Fragment, null, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Transfer Dino\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Select Current Paddock\"), React.createElement(\"select\", {\n        value: this.state.paddockSelected,\n        onChange: this.handlePaddockSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, individualPaddocks), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Select Dinosaur By Name\"), React.createElement(\"select\", {\n        value: this.state.dinoSelected,\n        onChange: this.handleDinoSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, individualDinos), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Select New Paddock\"), React.createElement(\"select\", {\n        value: this.state.newPaddockSelected,\n        onChange: this.handleNewPaddockSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, individualNewPaddocks), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Transfer Dinosaur\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return TransferDino;\n}(Component);\n\nexport default TransferDino;","map":{"version":3,"sources":["/Users/andrewcarracher/codeclan/work_files/final_project/front_end/dino_world/src/containers/dinosaur_view/transfer_dino.js"],"names":["React","Component","Request","TransferDino","props","state","dinosaurs","paddocks","paddockSelected","dinoSelected","newPaddockSelected","id","handleDinoSelected","bind","handlePaddockSelected","handleSubmit","request","get","then","data","setState","e","target","value","i","length","name","occupants","event","preventDefault","handleDinosaurTransfer","transferDetails","dinos","individualDinos","map","dinosaur","individualPaddocks","paddock","individualNewPaddocks","handleNewPaddockSelected"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Request from '../../helpers/request';\n\nclass TransferDino extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      dinosaurs: [],\n      paddocks: [],\n      paddockSelected: [],\n      dinoSelected: [],\n      newPaddockSelected: [],\n      id: []\n    }\n    this.handleDinoSelected = this.handleDinoSelected.bind(this);\n    this.handlePaddockSelected = this.handlePaddockSelected.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount(){\n    const request = new Request();\n    request.get(\"/dinosaurs/\").then((data) => {\n      this.setState({dinosaurs: data});\n      })\n    request.get(\"/paddocks/all\").then((data) => {\n      this.setState({paddocks: data});\n      })\n  }\n\n  handlePaddockSelected(e){\n    if(e){\n      this.setState({newPaddockSelected: e.target.value});\n    }\n  }\n\n  handlePaddockSelected(e){\n    if(e){\n      for(let i = 0; i< this.state.paddocks.length;  i++){\n        if (this.state.paddocks[i].name === e.target.value){\n          this.setState({paddockSelected: this.state.paddocks[i]});\n          this.setState({dinosaurs: this.state.paddocks[i].occupants})\n        }\n      }\n    }\n  }\n\n  handleDinoSelected(e){\n    if(e){\n        this.setState({dinoSelected: e.target.value});\n      }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    this.props.handleDinosaurTransfer(this.state.dinoSelected, this.state.newPaddockSelected);\n    this.setState({transferDetails: []});\n  }\n\n  render(){\n\n    let dinos = this.state.dinosaurs;\n    let paddocks = this.state.paddocks;\n    let individualDinos = dinos.map((dinosaur) =>\n                 <option key={dinosaur.id} value={dinosaur.id}>{dinosaur.name}</option>\n             );\n    let individualPaddocks = paddocks.map((paddock) =>\n                  <option key={paddock.name} value={paddock.name}>{paddock.name}</option>\n              );\n    let individualNewPaddocks = paddocks.map((paddock) =>\n                  <option key={paddock.name} value={paddock.name}>{paddock.name}</option>\n              );\n  return(\n    <>\n      <h4>Transfer Dino</h4>\n      <p>Select Current Paddock</p>\n      <select value={this.state.paddockSelected} onChange={this.handlePaddockSelected}>\n        {individualPaddocks}\n      </select>\n      <p>Select Dinosaur By Name</p>\n      <select value={this.state.dinoSelected} onChange={this.handleDinoSelected}>\n         {individualDinos}\n      </select>\n      <p>Select New Paddock</p>\n      <select value={this.state.newPaddockSelected} onChange={this.handleNewPaddockSelected}>\n        {individualNewPaddocks}\n      </select>\n      <form>\n        <input type=\"submit\" value=\"Transfer Dinosaur\" />\n      </form>\n    </>\n  );\n}\n}\n\nexport default TransferDino;\n"]},"metadata":{},"sourceType":"module"}