{"ast":null,"code":"import _classCallCheck from \"/Users/andrewcarracher/codeclan/work_files/final_project/front_end/dino_world/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/andrewcarracher/codeclan/work_files/final_project/front_end/dino_world/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/andrewcarracher/codeclan/work_files/final_project/front_end/dino_world/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/andrewcarracher/codeclan/work_files/final_project/front_end/dino_world/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/andrewcarracher/codeclan/work_files/final_project/front_end/dino_world/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/andrewcarracher/codeclan/work_files/final_project/front_end/dino_world/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/andrewcarracher/codeclan/work_files/final_project/front_end/dino_world/src/containers/ParkView.js\";\nimport React, { Component } from 'react';\nimport PaddockStatus from './park_view/PaddockStatus';\nimport ParkStatus from '../components/park_view/ParkStatus';\nimport RampageStatus from '../components/park_view/RampageStatus';\nimport Request from '../helpers/request';\nimport VisitorCount from '../components/park_view/VisitorCount';\n\nvar ParkView =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ParkView, _Component);\n\n  function ParkView(props) {\n    var _this;\n\n    _classCallCheck(this, ParkView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ParkView).call(this, props));\n    _this.state = {\n      parkOpen: [],\n      rampaging: [],\n      visitorCount: [],\n      capacity: 15000\n    };\n    _this.handleVisitorAdd = _this.handleVisitorAdd.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleStatusChange = _this.handleStatusChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleRampageStatusChange = _this.handleRampageStatusChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ParkView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var request = new Request();\n      request.get(\"/park\").then(function (data) {\n        _this2.setState({\n          parkOpen: data[0].parkOpen\n        });\n\n        _this2.setState({\n          rampaging: data[0].rampaging\n        });\n\n        _this2.setState({\n          visitorCount: data[0].visitorCount\n        });\n\n        _this2.setState({\n          capacity: data[0].capacity\n        });\n      });\n    }\n  }, {\n    key: \"handleVisitorAdd\",\n    value: function handleVisitorAdd(event) {\n      if (event) {\n        if (this.state.rampaging === false && this.state.parkOpen === true) {\n          if (this.state.visitorCount + 1 < this.state.capacity) {\n            var newVisitorCount = this.state.visitorCount + 1;\n            this.setState({\n              visitorCount: newVisitorCount\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: \"handleStatusChange\",\n    value: function handleStatusChange(event) {\n      if (event) {\n        if (this.state.parkOpen) {\n          this.setState({\n            parkOpen: false\n          });\n        } else {\n          this.setState({\n            parkOpen: true\n          });\n        }\n      }\n    }\n  }, {\n    key: \"handleRampageStatusChange\",\n    value: function handleRampageStatusChange(event) {\n      if (event) {\n        if (this.state.rampaging) {\n          this.setState({\n            rampaging: false\n          });\n        } else {\n          this.setState({\n            rampaging: true\n          });\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"ParkView\"), React.createElement(\"div\", {\n        id: \"park_info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(VisitorCount, {\n        onClick: this.handleVisitorAdd,\n        capacity: this.state.capacity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(ParkStatus, {\n        onClick: this.handleStatusChange,\n        parkOpen: this.state.parkOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(RampageStatus, {\n        onClick: this.handleRampageStatusChange,\n        rampaging: this.state.rampaging,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })), React.createElement(PaddockStatus, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ParkView;\n}(Component);\n\nexport default ParkView;","map":{"version":3,"sources":["/Users/andrewcarracher/codeclan/work_files/final_project/front_end/dino_world/src/containers/ParkView.js"],"names":["React","Component","PaddockStatus","ParkStatus","RampageStatus","Request","VisitorCount","ParkView","props","state","parkOpen","rampaging","visitorCount","capacity","handleVisitorAdd","bind","handleStatusChange","handleRampageStatusChange","request","get","then","data","setState","event","newVisitorCount"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PaddockStatus from './park_view/PaddockStatus';\nimport ParkStatus from '../components/park_view/ParkStatus';\nimport RampageStatus from '../components/park_view/RampageStatus';\nimport Request from '../helpers/request';\nimport VisitorCount from '../components/park_view/VisitorCount';\n\nclass ParkView extends Component {\n  constructor(props){\n    super(props)\n    this.state = {parkOpen: [], rampaging: [], visitorCount: [], capacity: 15000}\n    this.handleVisitorAdd = this.handleVisitorAdd.bind(this);\n    this.handleStatusChange = this.handleStatusChange.bind(this);\n    this.handleRampageStatusChange = this.handleRampageStatusChange.bind(this);\n  }\n\n  componentDidMount(){\n    const request = new Request();\n    request.get(\"/park\").then((data) => {\n        this.setState({parkOpen: data[0].parkOpen});\n        this.setState({rampaging: data[0].rampaging});\n        this.setState({visitorCount: data[0].visitorCount});\n        this.setState({capacity: data[0].capacity});\n    })\n  }\n\n  handleVisitorAdd(event){\n    if(event){\n      if(this.state.rampaging === false && this.state.parkOpen === true){\n        if(this.state.visitorCount +1 < this.state.capacity){\n          let newVisitorCount = this.state.visitorCount +1;\n          this.setState({\n            visitorCount: newVisitorCount\n          })\n        }\n      }\n    }\n  }\n\n  handleStatusChange(event){\n    if(event){\n      if(this.state.parkOpen){\n        this.setState({parkOpen: false})\n      }else{\n        this.setState({parkOpen: true})\n      }\n    }\n  }\n\n  handleRampageStatusChange(event){\n    if(event){\n      if(this.state.rampaging){\n        this.setState({rampaging: false})\n      }else{\n        this.setState({rampaging: true})\n      }\n    }\n  }\n\n\n  render() {\n    return (\n        <>\n          <h2>ParkView</h2>\n          <div id=\"park_info\">\n          <VisitorCount onClick={this.handleVisitorAdd} capacity = {this.state.capacity} />\n          <ParkStatus onClick = {this.handleStatusChange} parkOpen = {this.state.parkOpen} />\n          <RampageStatus onClick = {this.handleRampageStatusChange} rampaging = {this.state.rampaging} />\n          </div>\n          <PaddockStatus />\n        </>\n    );\n  }\n}\n\nexport default ParkView;\n"]},"metadata":{},"sourceType":"module"}