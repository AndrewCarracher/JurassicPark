{"ast":null,"code":"import _classCallCheck from \"/Users/andrewcarracher/codeclan/work_files/final_project/front_end/dino_world/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/andrewcarracher/codeclan/work_files/final_project/front_end/dino_world/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/andrewcarracher/codeclan/work_files/final_project/front_end/dino_world/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/andrewcarracher/codeclan/work_files/final_project/front_end/dino_world/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/andrewcarracher/codeclan/work_files/final_project/front_end/dino_world/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/andrewcarracher/codeclan/work_files/final_project/front_end/dino_world/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/andrewcarracher/codeclan/work_files/final_project/front_end/dino_world/src/containers/dinosaur_view/remove_dino.js\";\nimport React, { Component } from 'react';\nimport Request from '../../helpers/request';\n\nvar RemoveDino =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RemoveDino, _Component);\n\n  function RemoveDino(props) {\n    var _this;\n\n    _classCallCheck(this, RemoveDino);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RemoveDino).call(this, props));\n    _this.state = {\n      dinosaurs: [],\n      paddocks: [],\n      paddockSelected: [],\n      dinoSelected: [],\n      id: []\n    };\n    _this.handleDinoSelected = _this.handleDinoSelected.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handlePaddockSelected = _this.handlePaddockSelected.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(RemoveDino, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var request = new Request();\n      request.get(\"/dinosaurs/\").then(function (data) {\n        _this2.setState({\n          dinosaurs: data\n        });\n      });\n      request.get(\"/paddocks/all\").then(function (data) {\n        _this2.setState({\n          paddocks: data\n        });\n\n        console.log(data);\n      });\n    }\n  }, {\n    key: \"handlePaddockSelected\",\n    value: function handlePaddockSelected(e) {\n      if (e) {\n        this.setState({\n          paddockSelected: e.target.value\n        });\n        var newDinoList = this.state.paddockSelected;\n        console.log(newDinoList);\n      }\n    }\n  }, {\n    key: \"handleDinoSelected\",\n    value: function handleDinoSelected(e) {\n      if (e) {\n        this.setState({\n          dinoSelected: e.target.value\n        });\n      }\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      event.preventDefault();\n      this.props.handleDinosaurRemove(this.state.dinoSelected);\n      this.setState({\n        dinoSelected: []\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var dinos = this.state.dinosaurs;\n      var paddocks = this.state.paddocks;\n      var individualDinos = dinos.map(function (dinosaur) {\n        return React.createElement(\"option\", {\n          key: dinosaur.id,\n          value: dinosaur.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, dinosaur.name);\n      });\n      var individualPaddocks = paddocks.map(function (paddock) {\n        return React.createElement(\"option\", {\n          key: paddock.name,\n          value: paddock.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, paddock.name);\n      });\n      console.log(this.state.dinoSelected);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(React.Fragment, null, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Kill Dino\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Select Paddock\"), React.createElement(\"select\", {\n        value: this.state.paddockSelected,\n        onChange: this.handlePaddockSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, individualPaddocks), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Select Dinosaur By Name\"), React.createElement(\"select\", {\n        value: this.state.dinoSelected,\n        onChange: this.handleDinoSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, individualDinos), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Kill Dinosaur\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return RemoveDino;\n}(Component);\n\nexport default RemoveDino;","map":{"version":3,"sources":["/Users/andrewcarracher/codeclan/work_files/final_project/front_end/dino_world/src/containers/dinosaur_view/remove_dino.js"],"names":["React","Component","Request","RemoveDino","props","state","dinosaurs","paddocks","paddockSelected","dinoSelected","id","handleDinoSelected","bind","handlePaddockSelected","handleSubmit","request","get","then","data","setState","console","log","e","target","value","newDinoList","event","preventDefault","handleDinosaurRemove","dinos","individualDinos","map","dinosaur","name","individualPaddocks","paddock"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,uBAApB;;IAEMC,U;;;;;AACJ,sBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,oFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,EADA;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,eAAe,EAAE,EAHN;AAIXC,MAAAA,YAAY,EAAE,EAJH;AAKXC,MAAAA,EAAE,EAAE;AALO,KAAb;AAOA,UAAKC,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBC,IAAxB,uDAA1B;AACA,UAAKC,qBAAL,GAA6B,MAAKA,qBAAL,CAA2BD,IAA3B,uDAA7B;AACA,UAAKE,YAAL,GAAoB,MAAKA,YAAL,CAAkBF,IAAlB,uDAApB;AAXgB;AAYjB;;;;wCAEgB;AAAA;;AACjB,UAAMG,OAAO,GAAG,IAAIb,OAAJ,EAAhB;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BC,IAA3B,CAAgC,UAACC,IAAD,EAAU;AACxC,QAAA,MAAI,CAACC,QAAL,CAAc;AAACb,UAAAA,SAAS,EAAEY;AAAZ,SAAd;AACC,OAFH;AAGAH,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BC,IAA7B,CAAkC,UAACC,IAAD,EAAU;AAC1C,QAAA,MAAI,CAACC,QAAL,CAAc;AAACZ,UAAAA,QAAQ,EAAEW;AAAX,SAAd;;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACC,OAHH;AAID;;;0CAEqBI,C,EAAE;AACtB,UAAGA,CAAH,EAAK;AACH,aAAKH,QAAL,CAAc;AAACX,UAAAA,eAAe,EAAEc,CAAC,CAACC,MAAF,CAASC;AAA3B,SAAd;AACA,YAAIC,WAAW,GAAG,KAAKpB,KAAL,CAAWG,eAA7B;AACAY,QAAAA,OAAO,CAACC,GAAR,CAAYI,WAAZ;AACD;AACF;;;uCAEkBH,C,EAAE;AACnB,UAAGA,CAAH,EAAK;AACD,aAAKH,QAAL,CAAc;AAACV,UAAAA,YAAY,EAAEa,CAAC,CAACC,MAAF,CAASC;AAAxB,SAAd;AACD;AACJ;;;iCAEYE,K,EAAO;AAClBA,MAAAA,KAAK,CAACC,cAAN;AAEA,WAAKvB,KAAL,CAAWwB,oBAAX,CAAgC,KAAKvB,KAAL,CAAWI,YAA3C;AACA,WAAKU,QAAL,CAAc;AAACV,QAAAA,YAAY,EAAE;AAAf,OAAd;AACD;;;6BAEO;AAEN,UAAIoB,KAAK,GAAG,KAAKxB,KAAL,CAAWC,SAAvB;AACA,UAAIC,QAAQ,GAAG,KAAKF,KAAL,CAAWE,QAA1B;AACA,UAAIuB,eAAe,GAAGD,KAAK,CAACE,GAAN,CAAU,UAACC,QAAD;AAAA,eACnB;AAAQ,UAAA,GAAG,EAAEA,QAAQ,CAACtB,EAAtB;AAA0B,UAAA,KAAK,EAAEsB,QAAQ,CAACtB,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA+CsB,QAAQ,CAACC,IAAxD,CADmB;AAAA,OAAV,CAAtB;AAGA,UAAIC,kBAAkB,GAAG3B,QAAQ,CAACwB,GAAT,CAAa,UAACI,OAAD;AAAA,eACxB;AAAQ,UAAA,GAAG,EAAEA,OAAO,CAACF,IAArB;AAA2B,UAAA,KAAK,EAAEE,OAAO,CAACF,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAiDE,OAAO,CAACF,IAAzD,CADwB;AAAA,OAAb,CAAzB;AAIFb,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAL,CAAWI,YAAvB;AACO,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,0CACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFA,EAGA;AAAQ,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWG,eAA1B;AAA2C,QAAA,QAAQ,EAAE,KAAKK,qBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGqB,kBADH,CAHA,EAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCANA,EAOA;AAAQ,QAAA,KAAK,EAAE,KAAK7B,KAAL,CAAWI,YAA1B;AAAwC,QAAA,QAAQ,EAAE,KAAKE,kBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACImB,eADJ,CAPA,EAUA;AAAM,QAAA,QAAQ,EAAE,KAAKhB,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,eAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAVA,CADJ,CADD;AAkBN;;;;EA7EwBb,S;;AAgFzB,eAAeE,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport Request from '../../helpers/request';\n\nclass RemoveDino extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      dinosaurs: [],\n      paddocks: [],\n      paddockSelected: [],\n      dinoSelected: [],\n      id: []\n    }\n    this.handleDinoSelected = this.handleDinoSelected.bind(this);\n    this.handlePaddockSelected = this.handlePaddockSelected.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\ncomponentDidMount(){\n  const request = new Request();\n  request.get(\"/dinosaurs/\").then((data) => {\n    this.setState({dinosaurs: data});\n    })\n  request.get(\"/paddocks/all\").then((data) => {\n    this.setState({paddocks: data});\n    console.log(data);\n    })\n}\n\nhandlePaddockSelected(e){\n  if(e){\n    this.setState({paddockSelected: e.target.value});\n    let newDinoList = this.state.paddockSelected;\n    console.log(newDinoList);\n  }\n}\n\nhandleDinoSelected(e){\n  if(e){\n      this.setState({dinoSelected: e.target.value});\n    }\n}\n\nhandleSubmit(event) {\n  event.preventDefault();\n\n  this.props.handleDinosaurRemove(this.state.dinoSelected);\n  this.setState({dinoSelected: []});\n}\n\nrender(){\n\n  let dinos = this.state.dinosaurs;\n  let paddocks = this.state.paddocks;\n  let individualDinos = dinos.map((dinosaur) =>\n               <option key={dinosaur.id} value={dinosaur.id}>{dinosaur.name}</option>\n           );\n  let individualPaddocks = paddocks.map((paddock) =>\n                <option key={paddock.name} value={paddock.name}>{paddock.name}</option>\n            );\n\nconsole.log(this.state.dinoSelected);\n       return (\n        <div>\n            <>\n            <h4>Kill Dino</h4>\n            <p>Select Paddock</p>\n            <select value={this.state.paddockSelected} onChange={this.handlePaddockSelected}>\n              {individualPaddocks}\n            </select>\n            <p>Select Dinosaur By Name</p>\n            <select value={this.state.dinoSelected} onChange={this.handleDinoSelected}>\n               {individualDinos}\n            </select>\n            <form onSubmit={this.handleSubmit}>\n              <input type=\"submit\" value=\"Kill Dinosaur\" />\n            </form>\n            </>\n        </div>\n       )\n}\n}\n\nexport default RemoveDino;\n"]},"metadata":{},"sourceType":"module"}